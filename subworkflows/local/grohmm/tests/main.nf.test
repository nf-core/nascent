nextflow_workflow {

    name "Test Workflow GROHMM"
    script "../main.nf"
    workflow "GROHMM"

    test("Should run without a tuning file") {
        when {
            params {
                outdir = "$outputDir"
                skip_tuning = true
            }
            workflow {
                """
                input[0] = [
                    [ id: 'mR1' ],
                    [ file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/sarscov2/illumina/bam/test.single_end.sorted.bam", checkIfExists: true), ]
                ]
                // FIXME This needs to match up with s40
                input[1] = file(
                            "https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/sarscov2/genome/genome.gtf",
                            checkIfExists: true
                            )
                input[2] = []
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() }
            )
        }

    }

    test("Should run with multiple bams") {
        when {
            params {
                outdir = "$outputDir"
            }
            workflow {
                """
                input[0] = [
                    [ id: 'mR1' ],
                    [ file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S0mR1.bam", checkIfExists: true),
                    file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S40mR1.bam", checkIfExists: true) ]
                ]
                input[1] = file(
                            "https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/genome.gtf",
                            checkIfExists: true
                            )
                input[2] = []
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() }
            )
        }

    }

    test("Should run with a tuning file") {

        when {
            params {
                outdir = "$outputDir"
            }
            workflow {
                """
                input[0] = [
                    [ id: 'mR1' ],
                    [ file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S0mR1.bam", checkIfExists: true),
                    file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S40mR1.bam", checkIfExists: true) ]
                ]
                input[1] = file(
                            "https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/genome.gtf",
                            checkIfExists: true
                            )
                input[2] = file("https://raw.githubusercontent.com/nf-core/test-datasets/nascent/misc/tune.csv", checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() }
            )
        }

    }

}
