{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/nascent/master/nextflow_schema.json",
    "title": "nf-core/nascent pipeline parameters",
    "description": "Global Run-On sequencing analysis pipeline",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/nascent/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "alignment_options": {
            "title": "Alignment Options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "aligner": {
                    "type": "string",
                    "default": "bwa",
                    "fa_icon": "fas fa-puzzle-piece",
                    "enum": ["bwa", "bwamem2", "dragmap", "bowtie2", "hisat2", "star"],
                    "description": "Specify aligner to be used to map reads to reference genome."
                },
                "skip_alignment": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip all of the alignment-based processes within the pipeline."
                },
                "skip_trimming": {
                    "type": "boolean",
                    "description": "Skip the adapter trimming step.",
                    "help_text": "Use this if your input FastQ files have already been trimmed outside of the workflow or if you're very confident that there is no adapter contamination in your data.",
                    "fa_icon": "fas fa-fast-forward"
                }
            }
        },
        "umi_options": {
            "title": "UMI options",
            "type": "object",
            "description": "Options for processing reads with unique molecular identifiers",
            "default": "",
            "fa_icon": "fas fa-barcode",
            "properties": {
                "with_umi": {
                    "type": "boolean",
                    "fa_icon": "fas fa-barcode",
                    "description": "Enable UMI-based read deduplication."
                },
                "umitools_dedup_stats": {
                    "type": "boolean",
                    "fa_icon": "fas fa-barcode",
                    "help_text": "It can be quite time consuming generating these output stats - see [#827](https://github.com/nf-core/rnaseq/issues/827).",
                    "description": "Generate output stats when running \"umi_tools dedup\"."
                }
            }
        },
        "transcript_identification_options": {
            "title": "Transcript Identification Options",
            "type": "object",
            "description": "Type of experiment to use for Transcript Identification(NT or TSS)",
            "properties": {
                "assay_type": {
                    "type": "string",
                    "fa_icon": "fas fa-vial",
                    "description": "What type of nascent or TSS assay the sample is.",
                    "enum": [
                        "CoPRO",
                        "GROcap",
                        "PROcap",
                        "CAGE",
                        "NETCAGE",
                        "RAMPAGE",
                        "csRNAseq",
                        "STRIPEseq",
                        "PROseq",
                        "GROseq",
                        "R_5",
                        "R_3",
                        "R1_5",
                        "R1_3",
                        "R2_5",
                        "R2_3"
                    ]
                },
                "use_homer_uniqmap": {
                    "type": "boolean",
                    "description": "Use HOMER uniqmap for transcript identification.",
                    "fa_icon": "fas fa-dna",
                    "help_text": "Enable this to use HOMER's uniqmap functionality for more accurate transcript identification in repetitive regions.",
                    "default": false,
                    "hidden": true
                },
                "skip_grohmm": {
                    "type": "boolean",
                    "description": "Skip groHMM all together",
                    "fa_icon": "fas fa-eye-slash",
                    "default": false
                },
                "grohmm_min_uts": {
                    "type": "integer",
                    "description": "Minimum number of UTs to use for groHMM.",
                    "fa_icon": "fas fa-sort-amount-desc",
                    "default": 5
                },
                "grohmm_max_uts": {
                    "type": "integer",
                    "description": "Maximum number of UTs to use for groHMM.",
                    "fa_icon": "fas fa-sort-amount-desc",
                    "default": 45
                },
                "grohmm_min_ltprobb": {
                    "type": "integer",
                    "description": "Minimum LTProbB value to use for groHMM.",
                    "fa_icon": "fas fa-sort-amount-desc",
                    "help_text": "Depends on how you look at this one, which is the minimum and maximum... But I figured most will ignore the negative, so we went with absolute values.",
                    "default": -100
                },
                "grohmm_max_ltprobb": {
                    "type": "integer",
                    "description": "Maximum LTProbB value to use for groHMM.",
                    "fa_icon": "fas fa-sort-amount-desc",
                    "help_text": "Depends on how you look at this one, which is the minimum and maximum... But I figured most will ignore the negative, so we went with absolute values.",
                    "default": -400
                },
                "filter_bed": {
                    "type": "string",
                    "fa_icon": "fas fa-filter",
                    "pattern": "^\\S+\\.bed(\\.gz)?$",
                    "description": "Undesired regions, that transcripts should not overlap with",
                    "help_text": "Promoter regions, or gene regions are a good example"
                },
                "intersect_bed": {
                    "type": "string",
                    "fa_icon": "fas fa-sort-amount-desc",
                    "pattern": "^\\S+\\.bed(\\.gz)?$",
                    "description": "Desired regions, that transcripts should overlap with",
                    "help_text": "Histone Modifications(H3K4me1 and H3K27ac), or known TREs from the PINTS element matrix are examples"
                }
            },
            "required": ["assay_type"],
            "fa_icon": "fas fa-microscope"
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "gtf": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.gtf(\\.gz)?$",
                    "description": "Path to GTF annotation file.",
                    "fa_icon": "fas fa-code-branch",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified."
                },
                "gff": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.gff(3)?(\\.gz)?$",
                    "fa_icon": "fas fa-code-branch",
                    "description": "Path to GFF3 annotation file.",
                    "help_text": "This parameter must be specified if `--genome` or `--gtf` are not specified."
                },
                "gene_bed": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.bed(\\.gz)?$",
                    "fa_icon": "fas fa-procedures",
                    "description": "Path to BED file containing gene intervals. This will be created from the GTF file if not specified."
                },
                "bwa_index": {
                    "type": "string",
                    "description": "Path to BWA mem indices.",
                    "fa_icon": "fas fa-copy",
                    "help_text": "> **NB** If none provided, will be generated automatically from the FASTA reference."
                },
                "bwamem2_index": {
                    "type": "string",
                    "description": "Path to bwa-mem2 mem indices.",
                    "fa_icon": "fas fa-copy",
                    "help_text": "> **NB** If none provided, will be generated automatically from the FASTA reference.",
                    "hidden": true
                },
                "dragmap": {
                    "type": "string",
                    "fa_icon": "fas fa-copy",
                    "description": "Path to dragmap indices.",
                    "help_text": "If you use AWS iGenomes, this has already been set for you appropriately.\n\nIf you wish to recompute indices available on igenomes, set `--dragmap false`.\n\n> **NB** If none provided, will be generated automatically from the FASTA reference, if `--aligner dragmap` is specified. Combine with `--save_reference` to save for future runs.",
                    "hidden": true
                },
                "bowtie2_index": {
                    "type": "string",
                    "fa_icon": "fas fa-copy",
                    "description": "Path to bowtie2 indices.",
                    "help_text": "If you use AWS iGenomes, this has already been set for you appropriately.\n\nIf you wish to recompute indices available on igenomes, set `--dragmap false`.\n\n> **NB** If none provided, will be generated automatically from the FASTA reference, if `--aligner bowtie2` is specified. Combine with `--save_reference` to save for future runs.",
                    "hidden": true
                },
                "hisat2_index": {
                    "type": "string",
                    "description": "Path to HISAT2 indices.",
                    "fa_icon": "fas fa-copy",
                    "help_text": "> **NB** If none provided, index will **NOT** be generated automatically from the FASTA reference. See nf-core/references if a custom index is needed."
                },
                "star_index": {
                    "type": "string",
                    "description": "Path to STAR indices.",
                    "fa_icon": "fas fa-copy",
                    "help_text": "> **NB** If none provided, index will be generated automatically from the FASTA reference."
                },
                "homer_uniqmap": {
                    "type": "string",
                    "description": "Path to HOMER uniqmap file or URL to download.",
                    "fa_icon": "fas fa-file-archive",
                    "help_text": "> **NB** If none provided, will be downloaded automatically from the HOMER website. See nf-core/references for generation",
                    "hidden": true
                },
                "save_reference": {
                    "type": "boolean",
                    "description": "If generated by the pipeline save the BWA index in the results directory.",
                    "help_text": "If an alignment index is generated by the pipeline use this parameter to save it to your results folder. These can then be used for future pipeline runs, reducing processing times.",
                    "fa_icon": "fas fa-save"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                },
                "human_pangenomics_base": {
                    "type": "string",
                    "description": "Directory / URL base for CHM13 references.",
                    "default": "https://s3-us-west-2.amazonaws.com/human-pangenomics",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/alignment_options"
        },
        {
            "$ref": "#/$defs/umi_options"
        },
        {
            "$ref": "#/$defs/transcript_identification_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
