nextflow_pipeline {

    name "Test Workflow main.nf"
    script "../../main.nf"

    test("Should run with bwa (default)") {

        when {
            params {
                outdir = "$outputDir"
                aligner = "bwa"
            }
        }

        then {
            assert workflow.success
            assert snapshot(
                workflow.trace.tasks().size(),
                path("$outputDir/bbmap").list(),
                // BUG https://github.com/nf-core/nascent/issues/102
                // path("$outputDir/bedtools").list(),
                // FIXME gtf2bed isn't deterministic
                // path("$outputDir/bwa/featurecounts/gene").list(),
                // FIXME cd4 isn't deterministic
                // path("$outputDir/bwa/featurecounts/predicted").list(),
                // path("$outputDir/deeptools").list(),
                // path("$outputDir/fastp/*.json").list(),
                // FIXME gtf2bed isn't deterministic
                // path("$outputDir/gtf2bed").list(),
                path("$outputDir/homer/cd4.bed"),
                path("$outputDir/homer/jurkat.bed"),
                path("$outputDir/preseq").list(),
                // path("$outputDir/rseqc").list(),
                path("$outputDir/samtools").list(),
            ).match()
        }

    }

    test("Should run with bwamem2") {

        when {
            params {
                outdir = "$outputDir"
                aligner = "bwamem2"
            }
        }

        then {
            assert workflow.success
            assert snapshot(
                workflow.trace.tasks().size(),
                path("$outputDir/bbmap").list(),
                // BUG https://github.com/nf-core/nascent/issues/102
                // path("$outputDir/bedtools").list(),
                // FIXME gtf2bed isn't deterministic
                // path("$outputDir/bwa/featurecounts/gene").list(),
                // FIXME cd4 isn't deterministic
                // path("$outputDir/bwa/featurecounts/predicted").list(),
                // path("$outputDir/deeptools").list(),
                // path("$outputDir/fastp/*.json").list(),
                // FIXME gtf2bed isn't deterministic
                // path("$outputDir/gtf2bed").list(),
                path("$outputDir/homer/cd4.bed"),
                path("$outputDir/homer/jurkat.bed"),
                path("$outputDir/preseq").list(),
                // path("$outputDir/rseqc").list(),
                path("$outputDir/samtools").list(),
            ).match()
        }

    }

    test("Should run with dragmap") {

        when {
            params {
                outdir = "$outputDir"
                aligner = "dragmap"
            }
        }

        then {
            assert workflow.success
            assert snapshot(
                workflow.trace.tasks().size(),
                path("$outputDir/bbmap").list(),
                // BUG https://github.com/nf-core/nascent/issues/102
                // path("$outputDir/bedtools").list(),
                // FIXME gtf2bed isn't deterministic
                // path("$outputDir/bwa/featurecounts/gene").list(),
                // FIXME cd4 isn't deterministic
                // path("$outputDir/bwa/featurecounts/predicted").list(),
                // path("$outputDir/deeptools").list(),
                // path("$outputDir/fastp/*.json").list(),
                // FIXME gtf2bed isn't deterministic
                // path("$outputDir/gtf2bed").list(),
                path("$outputDir/homer/cd4.bed"),
                path("$outputDir/homer/jurkat.bed"),
                path("$outputDir/preseq").list(),
                // path("$outputDir/rseqc").list(),
                // FIXME Not deterministic
                // path("$outputDir/samtools").list(),
            ).match()
        }
    }

    test("Should run with HISAT2") {

        tag "HISAT2"

        when {
            params {
                outdir = "$outputDir"
                aligner = "hisat2"
                hisat2_index = 'https://raw.githubusercontent.com/nf-core/test-datasets/nascent/reference/GRCh38_chr21_hisat2.tar.gz'
            }
        }

        then {
            assert workflow.success
            assert snapshot(
                workflow.trace.tasks().size(),
                path("$outputDir/bbmap").list(),
                // BUG https://github.com/nf-core/nascent/issues/102
                // path("$outputDir/bedtools").list(),
                // FIXME gtf2bed isn't deterministic
                // path("$outputDir/bwa/featurecounts/gene").list(),
                // FIXME cd4 isn't deterministic
                // path("$outputDir/bwa/featurecounts/predicted").list(),
                // path("$outputDir/deeptools").list(),
                // path("$outputDir/fastp/*.json").list(),
                // FIXME gtf2bed isn't deterministic
                // path("$outputDir/gtf2bed").list(),
                path("$outputDir/homer/cd4.bed"),
                path("$outputDir/homer/jurkat.bed"),
                path("$outputDir/preseq").list(),
                // path("$outputDir/rseqc").list(),
                // FIXME Not deterministic
                // path("$outputDir/samtools").list(),
            ).match()
        }
    }
}
