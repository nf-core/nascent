nextflow_pipeline {

    name "GROHMM"
    script "../../../../../main.nf"
    tag "input"
    tag "grohmm"
    tag "gff"
    tag "chm13"
    // triggers 'bin/parameter_tuning.R', 'bin/transcriptcalling_grohmm.R'

    test("Should run groHMM with only a GFF file") {
        when {
            params {
                outdir = "$outputDir"
                skip_grohmm = false
                gff = 'https://huggingface.co/datasets/edmundmiller/nascent-test-data/resolve/main/chm13v2.0_RefSeq_Liftoff_v5.1.chr21.gff3.gz'
                // TODO Use CHM13 Fasta
                gtf = null
                bed = null
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(UTILS.removeNextflowVersion("$outputDir/pipeline_info/nf_core_pipeline_software_mqc_versions.yml")).match("software_versions") },
                { assert snapshot(
                    workflow.trace.tasks().size(),
                    path("$outputDir/transcript_identification/homer/cd4.bed"),
                    path("$outputDir/transcript_identification/homer/jurkat.bed"),
                    // FIXME Not determinstic because of the order of files
                    // Add to the other tests when fixed
                    // UTILS.getAllFilesFromDir("$outputDir/transcript_identification/pints/", ".bed"),
                    path("$outputDir/transcript_identification/intersect/").list(),
                    path("$outputDir/transcript_identification/filtered/").list(),
                    path("$outputDir/transcript_identification/intersect/").list(),
                    path("$outputDir/transcript_identification/filtered/").list(),
                    path("$outputDir/transcript_identification/grohmm/cd4.eval.txt"),
                    path("$outputDir/transcript_identification/grohmm/cd4.final.transcripts.bed"),
                    path("$outputDir/transcript_identification/grohmm/cd4.tdFinal.txt"),
                    path("$outputDir/transcript_identification/grohmm/cd4.tdplot_mqc.png").exists(),
                    path("$outputDir/transcript_identification/grohmm/cd4.transcripts.txt"),
                    path("$outputDir/transcript_identification/grohmm/jurkat.eval.txt"),
                    path("$outputDir/transcript_identification/grohmm/jurkat.final.transcripts.bed"),
                    path("$outputDir/transcript_identification/grohmm/jurkat.tdFinal.txt"),
                    path("$outputDir/transcript_identification/grohmm/jurkat.tdplot_mqc.png").exists(),
                    path("$outputDir/transcript_identification/grohmm/jurkat.transcripts.txt"),
                    // FIXME Not determinstic because of the order of files
                    // Add to the other tests when fixed
                    // path("$outputDir/quantification/").list(),
                    path("$outputDir/multiqc/multiqc_report.html").exists(),
                ).match("output_files")
                }
            )
        }
    }
}
