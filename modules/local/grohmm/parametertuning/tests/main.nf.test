nextflow_process {

    name "Test Process GROHMM_PARAMETERTUNING"
    script "modules/local/grohmm/parametertuning/main.nf"
    process "GROHMM_PARAMETERTUNING"

    test("Should fail with a tuning file") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                    [ id: 'Sall' ],
                    [ file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S0mR1.bam", checkIfExists: true),
                    file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S40mR1.bam", checkIfExists: true) ],
                    [],
                    [],
                ]
                input[1] = file(
                            "https://gist.github.com/edmundmiller/c142801995689ed8d15ebcf40b2fb042/raw/eca3b955312209b5845cca084bb506d5250b3d33/hg19.chr7.refGene.gtf",
                            checkIfExists: true
                            )
                """
            }
        }

        then {
            assert process.failed
        }
    }

    test("Should run with a tuning file and without bai files") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                    [ id: 'Sall' ],
                    [ file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S0mR1.bam", checkIfExists: true),
                    file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S40mR1.bam", checkIfExists: true) ],
                    [],
                    file("${projectDir}/tests/config/tuningparams_small.csv", checkIfExists: true),
                ]
                input[1] = file(
                            "https://gist.github.com/edmundmiller/c142801995689ed8d15ebcf40b2fb042/raw/eca3b955312209b5845cca084bb506d5250b3d33/hg19.chr7.refGene.gtf",
                            checkIfExists: true
                            )
                """
            }
        }

        then {
            // TODO
            assert process.failed
        }
    }
}
